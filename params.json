{"name":"Favor","tagline":"A easy way of using Android SharedPreferences.","body":"Favor\r\n=======\r\n[![Build Status](https://travis-ci.org/soarcn/Favor.svg)](https://travis-ci.org/soarcn/Favor)  [![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Favor-brightgreen.svg?style=flat)](http://android-arsenal.com/details/1/2695)\r\n\r\nA easy way of using Android SharedPreferences.\r\n\r\nHow to use this library\r\n=======\r\n\r\n- Using Gradle\r\n\r\n```groovy\r\n    compile 'com.cocosw:favor:0.1.0@aar'\r\n```\r\n- Using Maven\r\n\r\n```xml\r\n<dependency>\r\n    <groupId>com.cocosw</groupId>\r\n    <artifactId>favor</artifactId>\r\n    <version>0.1.0</version>\r\n    <type>apklib</type>\r\n</dependency>\r\n```\r\n\r\nAPI\r\n=======\r\n\r\n1 Define a interface.\r\n\r\n```java \r\n@AllFavor\r\npublic interface Account {\r\n    @Default(\"No Name\")\r\n    String getUserName();\r\n    String setPassword(String password);\r\n}\r\n```\r\n\r\n2 The FavorAdatper class generates an implementation of the interface.\r\n\r\n```java \r\naccount = new FavorAdapter.Builder(getContext()).build().create(Account.class);\r\naccount.setPassword(\"Passw0rd\");\r\nString username = account.getUserName();\r\n```\r\n\r\nAPI Declaration\r\n======\r\n\r\n@AllFavor\r\n-----\r\n\r\n```java\r\n@AllFavor\r\npublic interface Account {\r\n    @Default(\"No Name\")\r\n    String getUserName();\r\n    String getPassword();\r\n}\r\n```\r\n\r\n@Favor @Default\r\n-----\r\n\r\n```java\r\n    @Favor(\"city\")\r\n    @Default(\"Sydney\")\r\n    String city();\r\n```\r\n\r\nequals\r\n\r\n```java\r\n    PreferenceManager.getDefaultSharedPreferences(context).getString(\"city\",\"Sydney\");\r\n```\r\n\r\nAnd you can simplify it, Favor will extract the key from the method name\r\n\r\n```java\r\n    @Favor\r\n    @Default(\"Sydney\")\r\n    String city();\r\n```\r\n\r\n@Commit\r\n------\r\n\r\nBy default, Favor will call editor.apply() (>api9), but you can force it to use editor.commit() by @Commit\r\n\r\n```java\r\n    @Favor\r\n    @Commit\r\n    void setAddress(String address);\r\n```\r\n    \r\nRxPreference\r\n------\r\n    \r\nYou are a RxJava fan, easy! (rx-preferences dependency is required)\r\n\r\n```java\r\n    @Favor\r\n    @Default(\"No Name\")\r\n    Preference<String> name();\r\n```    \r\n\r\nAdvanced usage\r\n-------\r\n\r\nFavor support put/get all primitive types, including int/long/float/String/bool, String set is also supported for API>=11.\r\nFrom 0.1.1, Favor (Experimentally) supports Serializable object saving/loading.\r\n\r\n```java\r\n    public class Image implements Serializable {\r\n    ....\r\n    }\r\n   \r\n    @Favor\r\n    Image image();\r\n\r\n    @Favor\r\n    void setImage(Image image);\r\n```\r\n\r\nThere is one limitation that you can't set default value for Serializable preference item.\r\n\r\n\r\nProguard\r\n=======\r\n\r\n```xml\r\n# Favor\r\n-dontwarn com.cocosw.favor.** { *; }\r\n-keep class com.cocosw.favor.** { *; }\r\n```\r\n\r\nContribute\r\n=======\r\n\r\n- Feel free to fork it\r\n\r\nAbout me\r\n=======\r\n\r\nI'm Kai, an 32 years old android developer living in Sydney.\r\n\r\n\r\nLicense\r\n=======\r\n\r\n    Copyright 2011, 2015 Kai Liao\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}